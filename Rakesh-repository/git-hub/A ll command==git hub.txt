https://git-scm.com/docs/git-log
https://git-scm.com/docs/pretty-formats
https://www.youtube.com/watch?v=7xhkEQS3dXw&list=PLu0W_9lII9agwhy658ZPA0MTStKUJTWPi&index=18
https://www.youtube.com/watch?v=xAAmje1H9YM&list=PLeo1K3hjS3usJuxZZUBdjAcilgfQHkRzW
https://www.youtube.com/watch?v=3RjQznt-8kE&list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR
remote repository===on internet required
it keep track of record of file
versioning-maitaing file ,saving source code maintaing source code
those who want version text based file
not allowed image pdf,excel,movies,music,font
git.--repository

distributed client server repository

diff === if one file edit and git add. but not commit then it moves in modified and staged area
now again same file edit and do not add then it use diff


git log -pretty=format:"%h -- %an"
==============================================================
why git is around==it is distributed repository
git config --global user.name "harry"
git config --global user.email "harry@gmail.com"
git congig --list
3 stage architecture(working--stage---git directory repository)
git status ==to know 3 stage architecture
git init==initialize empty git repository
git log==to see all commit detail and know author created and changed commited)
rm -rf .git==remove .git repository is created by git init command(use carefully this command)
File status life cycle==
git init===untracked====unmodified==modified==staged
git add first.txt== add single file what u modified
git add --a== add all changes
gitignore==inside that whatever file is there and u change that file no problem 
git diff== show difference  details before modified and after modified  between working directory and staged area 
git diff --staged== show difference  details before modified and after modified  between  staged area  and commited
git checkout -b trycleanup=== to switching other branch
git commit -a  -m "direct commit"==== skipp git add
git add .========= all modified changes
git mv first.txt first_rename.txt==rename  file and move to stage area if without command  rename right click then it does not move to stage area
git rm third.txt== after remove automatically moved to stage area
git rm --cached db.accb==after putting any file db.accb and  change it show the modified msg then run command
git log -p ==to know detail what u changed  and remove and add
git log p  -3== to show first 3 commits
git log p  -2== to show first 2 commits
git log  --stat== to get details in short
git log --pretty=== to get commit details in one line
git log --since=2.days== to get 2 days log details
git log --since=2.weeks== to get 2 weeks log details
git log --since=2.months== to get 2 months log details
git log --since=2.years== to get 2 year log details
git log --pretty=short==to get  only author name
git log --pretty=full==to get  both author name and commit
git log  --pretty=format:"%h -- %ae"==  email details
git log  --pretty=format:"%h -- %an"==author name details
git remote== to see wheather ur code is in git hub website or not
git remote add origin git@github.con:codewithharry/gittutorial.git==to push ur local code on git hub website at first time execute commands
how to generate ssh key ==see all steps
git config --global alias.st status== create alias for git status
git config --global alias.ci commit== create alias for git commit
git config --global alias.unstage 'restore --staged--'== create alias for restore staged(means for unstage)
git config --global alias.last 'log -p -1'== create alias to see last commit details
git restore this.txt==remove all ur earlier changes (use carefully this commands)
git checkout  -b  develop
git merge trycleanup==merge the branch with master branch
git branch== to see all branch
git branch -v== to see all branch
git branch  --merged== to know name of branch which is merged
git branch  --no-merged== to know name of branch which is not merged
git branch -d issue1== to delete branch 
git push origin bugify== to push  other branch not master in remote repository(github) 
git push origin bugfix:mybugfix==rename the branch in remote repository
git push -d origin bugfix== to delete branch in remote repository
git checkout  -- hungry.py== undo th changes before commit in hungry.py
git checkout --  ==  undo the changes of multiple file before commit
git revert commit id===undo after commit
git show commit-id== to see changes of particular commit
git revert -n commit-id===undo using revert but not commited
git reset --hard== to back ur all changes after undo
git difftool  commit-id1  commit-id2
git reset --hard HEAD ~1
git reset --hard HEAD ~4
to get back of ur code before 2 month

















